insert into config.CDC_TEMPLATE (SOURCE_SCHEMA_NAME, SOURCE_OBJECT_NAME, TARGET_SCHEMA_NAME, TARGET_OBJECT_NAME, DEDUP_TABLE_NAME, FULL_LOAD, CREATE_DEDUP_TABLE_SQL, MERGE_TABLE_SQL,COLUMN_NAMES,S3_FOLDER_PATH,JSON_SCHEMA_PATH) values ('users_temp', 'temp_users_ms', 'users', 'users_ms', 'temp_users_ms_dedup', 'FALSE', 'create temporary table temp_users_ms_dedup as (select * from users_temp.temp_users_ms tb qualify row_number() over (partition by id order by kafka_timestamp desc) = 1)', 'merge into users.users_ms using temp_users_ms_dedup TEMP_TBL on users_ms.id = TEMP_TBL.id when matched then update set id = TEMP_TBL.id,
user_name = TEMP_TBL.user_name,
first_name = TEMP_TBL.first_name,
last_name = TEMP_TBL.last_name,
email = TEMP_TBL.email,
is_system_user = TEMP_TBL.is_system_user,
web_access_enabled = TEMP_TBL.web_access_enabled,
employee_id = TEMP_TBL.employee_id,
company_id = TEMP_TBL.company_id,
status = TEMP_TBL.status,
user_type = TEMP_TBL.user_type,
roles = TEMP_TBL.roles,
login_enabled = TEMP_TBL.login_enabled,
multiple_company_user_flag = TEMP_TBL.multiple_company_user_flag,
correlation_id = TEMP_TBL.correlation_id,
kafka_topic = TEMP_TBL.kafka_topic,
kafka_partition = TEMP_TBL.kafka_partition,
kafka_offset = TEMP_TBL.kafka_offset,
kafka_timestamp = TEMP_TBL.kafka_timestamp,
kafka_timestamp_type = TEMP_TBL.kafka_timestamp_type,
kafka_date_time = TEMP_TBL.kafka_date_time,
kafka_key = TEMP_TBL.kafka_key,
record_update_ts=sysdate when not matched then insert (id, user_name, first_name, last_name, email, is_system_user, web_access_enabled, employee_id, company_id, status, user_type, roles, login_enabled, multiple_company_user_flag, correlation_id, kafka_topic, kafka_partition, kafka_offset, kafka_timestamp, kafka_timestamp_type, kafka_date_time, kafka_key, RECORD_CREATION_TS, RECORD_UPDATE_TS) values (TEMP_TBL.id, TEMP_TBL.user_name, TEMP_TBL.first_name, TEMP_TBL.last_name, TEMP_TBL.email, TEMP_TBL.is_system_user, TEMP_TBL.web_access_enabled, TEMP_TBL.employee_id, TEMP_TBL.company_id, TEMP_TBL.status, TEMP_TBL.user_type, TEMP_TBL.roles, TEMP_TBL.login_enabled, TEMP_TBL.multiple_company_user_flag, TEMP_TBL.correlation_id, TEMP_TBL.kafka_topic, TEMP_TBL.kafka_partition, TEMP_TBL.kafka_offset, TEMP_TBL.kafka_timestamp, TEMP_TBL.kafka_timestamp_type, TEMP_TBL.kafka_date_time, TEMP_TBL.kafka_key,sysdate,sysdate)','id, user_name, first_name, last_name, email, is_system_user, web_access_enabled, employee_id, company_id, status, user_type, roles, login_enabled, multiple_company_user_flag, correlation_id, kafka_topic, kafka_partition, kafka_offset, kafka_timestamp, kafka_timestamp_type, kafka_date_time, kafka_key','s3://lytx-admin-kafka-stg-oregon-003/users/microservice/stage/','NA');